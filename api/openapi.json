{
  "swagger": "2.0",
  "info": {
    "description": "This is library server",
    "version": "1.0.0",
    "title": "BookStore",
    "termsOfService": "http://xyz.com",
    "contact": {
      "email": "abc@zopsmart.com"
    }
  },
  "host": "localhost:8000",
  "basePath": "/v2",
  "tags": [
    {
      "name": "book",
      "description": "Everything about a book",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://xyz.com"
      }
    },
    {
      "name": "review",
      "description": "Everything about a review",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://xyz.com"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/book": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "fetch booklist by given filter",
        "description": "default: all book, \nfilters: author, language, year, category(genre), \noffset: page, count",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "bearer_token",
            "required": true,
            "type": "string",
            "description": "token for authentication"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string",
            "description": "type of filter to be applied. \n if nil, no filter will be applied by default."
          },
          {
            "in": "query",
            "name": "keyword",
            "type": "string",
            "description": "value against which the list will be filtered."
          },
          {
            "in": "query",
            "name": "page",
            "type": "integer",
            "description": "page number"
          },
          {
            "in": "query",
            "name": "count",
            "type": "integer",
            "description": "count number"
          }
        ],
        "responses": {
          "200": {
            "description": "fetch successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShortBook"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Get a book detail",
        "description": "",
        "operationId": "getBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearer_token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Invalid id"
          },
          "401": {
            "description": "Unauthorised"
          }
        }
      },
      "put": {
        "tags": [
          "book"
        ],
        "summary": "Update a book detail",
        "description": "",
        "operationId": "updateBook",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearer_token",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Book object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "updated successfully",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "book"
        ],
        "summary": "delete a book detail",
        "description": "",
        "operationId": "deleteBook",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of book that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bearer_token",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleted successfully"
          },
          "401": {
            "description": "Unauthorised"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    }
  },
  "definitions": {
    "ShortBook": {
      "type": "object",
      "required": [
        "bookid",
        "title",
        "author",
        "genre",
        "image"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "bookid": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "Book": {
      "type": "object",
      "required": [
        "bookid",
        "title",
        "author",
        "summary",
        "genre",
        "publish_date",
        "regd_number",
        "publisher",
        "language"
      ],
      "properties": {
        "bookid": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "genre": {
          "type": "string"
        },
        "publish_date": {
          "type": "string",
          "format": "date"
        },
        "regd_number": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}